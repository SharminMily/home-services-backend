
generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  phone       String?
  password    String
  role        String   @default("user") 
  bookings    Booking[]
  reviews     Review[]
  createdAt   DateTime @default(now())
}

model Provider {
  id           String    @id @default(uuid())
user User @relation(fields: [email], references: [email])
  userId       String
  services     Service[]
  bookings     Booking[]
  rating       Float     @default(0)
  availability Json?
  documents    Json?
  location     Location
  createdAt    DateTime  @default(now())
}

model Service {
  id          String    @id @default(uuid())
  title       String
  description String
  category    String
  price       Float
  provider    Provider  @relation(fields: [providerId], references: [id])
  providerId  String
  reviews     Review[]
  createdAt   DateTime  @default(now())
}

model Booking {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  provider    Provider  @relation(fields: [providerId], references: [id])
  providerId  String
  service     Service   @relation(fields: [serviceId], references: [id])
  serviceId   String
  status      String    @default("pending") // pending, accepted, completed, cancelled
  scheduledAt DateTime
  createdAt   DateTime  @default(now())
}

model Review {
  id          String    @id @default(uuid())
  rating      Int
  comment     String?
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  service     Service   @relation(fields: [serviceId], references: [id])
  serviceId   String
  createdAt   DateTime  @default(now())
}

model Location {
  id        String   @id @default(uuid())
  provider  Provider @relation(fields: [providerId], references: [id])
  providerId String
  latitude  Float
  longitude Float
  address   String
}


enum UserRole {
  SUPER_ADMIN
  ADMIN
  DOCTOR
  PATIENT
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED 
}

enum Gender {
  MALE
  FEMALE
}


